{"version":3,"sources":["API.js","RaidRow.js","RaidContext.js","FlexContainer.js","Loading.js","Home.js","Validations.js","ClassDetails.js","FailColumns.js","BuffColumns.js","CastColumns.js","RaidDetails.js","RaidHome.js","AppNav.js","App.js","reportWebVitals.js","index.js"],"names":["authToken","axios","create","baseURL","RaidRow","raid","to","code","style","display","width","flex","title","zone","name","owner","RaidContext","createContext","useRaid","useContext","RaidProvider","children","useState","raids","setRaids","value","getFusion","request","url","method","headers","data","query","then","res","reportData","reports","Provider","FlexContainer","Loading","message","styles","loadingModal","height","backgroundColor","opacity","position","top","left","zIndex","loadingModalIcon","marginRight","transform","fontSize","LoadingModal","CircularProgress","color","Home","loading","setLoading","useEffect","slice","map","casterApprovedEnchants","meleeApprovedEnchants","healerApprovedEnchants","tankApprovedEnchants","getClassColor","classname","CustomAccordionSummary","styled","AccordionSummary","FailColumns","player","i","Accordion","sx","expandIcon","ExpandMore","failedEnchants","length","AccordionDetails","item","Chip","label","permanentEnchantName","size","failedGems","failGems","gem","id","BuffColumns","buffsColumns","totalCombatTime","buff","playerBuff","buffs","find","pbuff","guid","uses","totalUses","uptime","Math","round","totalUptime","CastColumns","castsColumns","cast","playerCast","casts","pcast","total","RaidDetails","useParams","players","setPlayers","setTotalCombatTime","setTitle","isLoading","setIsLoading","unValidatedPlayers","getRaidInfo","fights","report","dps","table","playerDetails","healers","tanks","tempTotalCombatTime","forEach","fight","encounterID","endTime","startTime","tank","type","splice","combatantInfo","gear","_","union","healer","index","object","spec","failGear","checklist","permanentEnchant","slot","includes","push","validateEnchantments","specs","gems","itemLevel","validateGems","cloneDeep","queryString","auras","entries","fontWeight","RaidHome","filter","AppNav","history","useHistory","anchor","setAnchor","open","Boolean","handleClose","route","Box","flexGrow","AppBar","Toolbar","variant","Typography","cursor","onClick","component","event","currentTarget","Menu","elevation","anchorOrigin","vertical","horizontal","transformOrigin","anchorEl","onClose","Divider","my","MenuItem","App","className","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e80eac17.chunk.js","sourcesContent":["// client code    947fb77e-d193-4b50-825f-e881cd028a79\r\n// client sercret XQ2RP725NGgaqb26avLHtoh4THwara72AWOj7Uui\r\nimport axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: ''\r\n})\r\n\r\n//lasts 60 days\r\n//9/27/21 - stt - expires 11/26/21\r\nexport const authToken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiI5NDdmYjc3ZS1kMTkzLTRiNTAtODI1Zi1lODgxY2QwMjhhNzkiLCJqdGkiOiIzYmI4ZjY1YjNjZjNiNTdmMmMzMjRhNzc0MWI0MTBjYTc3MmFjNGFiOTQ4MTQ1OTk5NjljOGFkMDdhYzYyZjA2YmNkOTVlNzc1NDM0MDgzOSIsImlhdCI6MTYzMjc3NjA0NywibmJmIjoxNjMyNzc2MDQ3LCJleHAiOjE2NDMxNDQwNDcsInN1YiI6IiIsInNjb3BlcyI6WyJ2aWV3LXVzZXItcHJvZmlsZSIsInZpZXctcHJpdmF0ZS1yZXBvcnRzIl19.owCN48Sg69DGDkzBr3B6nbfMriMD4hsTSN-gIqxyycoBauwfKKtz8sH_k_WB8-yej-Ac_uJwSp-M4NMpZKW_KcJgDvaZPix9ZDhStYgL4E3l3wigG-cQiqo3xeCTQxvHava6A85yIcuvUpk1XssZ9DWhWeQ0NfNfO5ctD6oksQMIYl7i6K6xkqcDBR7QbnrZ2ef3VdDpkuBtQGHJy315Qz8FbuU_JN-BrDWbWHbkGG7gISNmYWfd6jcW5pOV3k1GF4wjfocdibQfXj6vfXhAr444HEf-6hgUcyc1d4ktZ5NKlxUIICkHpn6sl1y63OMmiS2ODhQOJnGDT8Dg1nNYp71jgFHBgZqzVwscPvmno-8s8bs7svou8VUGsqamtq1cdfVK0juNsWJlwchu2QYbhijXLU86XpQrgVGhrLcAub7K7c2QP9jMJy6tcLwHZGP0oAxUb2CVyPbv1jr1Nq6TlgXsG9MzlqdKCKOR1WcoRLUhVJJhhxqXE8qVQ9vRmzWU9Qk_0coStr2t0wtKq7hWnnOcbvmC6x6iwPZJOU84Fhf98nsk6Vmi2GoU1HCewPyZaMU9nNwg9vgjnRsm_46vhnbtt_9UoM2gbPsE1yJtAGw83cvCkTTAjhX5fhB-rDszQTTGgAL79-l2DtXzs6m-k0XfZUeq9lbhvT-FJiJa14k'\r\n\r\nexport const getToken = () =>{\r\n    axios.request({\r\n      url: \"/oauth/token\",\r\n      method: \"post\",\r\n      baseURL: \"https://www.warcraftlogs.com/\",\r\n      auth: {\r\n        username: \"947fb77e-d193-4b50-825f-e881cd028a79\",\r\n        password: \"XQ2RP725NGgaqb26avLHtoh4THwara72AWOj7Uui\"\r\n      },\r\n      data: {\r\n        \"grant_type\": \"client_credentials\"\r\n      }\r\n    }).then(function(res) {\r\n      if(res.data.access_token){\r\n        console.log(res.data.access_token)\r\n      }\r\n    })\r\n  }","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst RaidRow = ({raid}) => {\r\n    return (\r\n        <div>\r\n            <NavLink to={\"/raiddetails/\"+raid.code}>\r\n                <div style={{display:'flex', width:'100%'}}>\r\n                    <div style={{flex:1}}>{`${raid.title ? raid.title : 'N/A'}`}</div>\r\n                    <div style={{flex:1}}>{`Zone: ${raid.zone ? raid.zone.name : 'N/A'}`}</div>\r\n                    <div style={{flex:1}}>{`Owner: ${raid.owner ? raid.owner.name : 'N/A'}`}</div>\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RaidRow\r\n","import React, {useContext, createContext, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { authToken } from './API'\r\n\r\nconst RaidContext = createContext()\r\n\r\nexport function useRaid(){\r\n    return useContext(RaidContext)\r\n}\r\n\r\nexport default function RaidProvider({children}) {\r\n    \r\n    const [raids, setRaids] = useState(null)\r\n\r\n    const getFusion = () =>{\r\n        axios.request({\r\n          url: \"api/v2/client\",\r\n          method: \"post\",\r\n          baseURL: \"https://classic.warcraftlogs.com/\",\r\n          headers: {\r\n            \"Authorization\": `Bearer ${authToken}`\r\n          },\r\n          data:{\r\n            query:`{\r\n              reportData {\r\n                reports(limit:100, guildName:\"Fusion\", guildServerSlug:\"benediction\", guildServerRegion:\"us\"){\r\n                  data{\r\n                    code\r\n                    owner{\r\n                      name\r\n                    }\r\n                    title\r\n                    zone{\r\n                      name\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }`\r\n          }\r\n        }).then(function(res) {\r\n          if(res.data.data){\r\n            setRaids(res.data.data.reportData.reports.data)\r\n          }\r\n          else{\r\n          }\r\n        })\r\n      }\r\n\r\n    const value = {\r\n        raids,\r\n        setRaids,\r\n        getFusion\r\n    }\r\n  \r\n    return (\r\n        <RaidContext.Provider value={value}>\r\n            {children}\r\n        </RaidContext.Provider>\r\n    )\r\n}","import React from 'react'\r\n\r\nconst FlexContainer = ({children}) => {\r\n    return (\r\n        <div style={{display:'flex'}}>\r\n            <div style={{flex:2}}></div>\r\n            <div style={{flex:8}}>{children}</div>\r\n            <div style={{flex:2}}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FlexContainer\r\n","/**React Hook import */\r\nimport React from 'react';\r\n\r\n/**Material-UI imports */\r\nimport { CircularProgress } from '@mui/material';\r\n\r\n/**LOADING MODAL***************************************************************/\r\n/**this is a component that will display a spinner over a darken screen */\r\n/**used for a waiting screen during async calls */\r\n\r\nconst Loading = ({message}) => {\r\n\r\n    const styles = {\r\n        /************************************************************************** */\r\n        /**LOADING STYLES */\r\n\r\n        //styles for the entire loading modal\r\n        loadingModal:{\r\n            height:'100vh',\r\n            width:'100vw',\r\n            backgroundColor:'#18191a',\r\n            opacity:.3,\r\n            position:'absolute',\r\n            top:0,\r\n            left:0,\r\n            zIndex:15\r\n        },\r\n\r\n        //styles for the icon inside the modal\r\n            loadingModalIcon:{\r\n            position: 'absolute',\r\n            top: '30%',\r\n            left: '50%',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            fontSize: 50\r\n        }\r\n    }\r\n\r\n/******************************************************************************/\r\n    /**Rendering */  \r\n\r\n    return (\r\n        <div style={styles.LoadingModal}>\r\n            <div style={styles.loadingModalIcon}> {message ? message : \"...Loading\"} <CircularProgress color=\"inherit\"/></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { authToken } from './API';\r\nimport RaidRow from './RaidRow';\r\nimport { useRaid } from './RaidContext';\r\nimport FlexContainer from './FlexContainer';\r\nimport Loading from './Loading';\r\n\r\nconst Home = () => {\r\n\r\n    const { raids, getFusion } = useRaid()\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n      setLoading(true)\r\n       if(!raids){\r\n         getFusion()\r\n       }\r\n       setLoading(false)\r\n    }, [])\r\n\r\n    return (loading ? <Loading/> :\r\n            <FlexContainer>\r\n              <h1>Recent Logs</h1>\r\n                {raids && raids.slice(0, 20).map((raid)=>{\r\n                return <RaidRow key={raid.code} raid={raid}/>\r\n                })}\r\n            </FlexContainer>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","//I know several of these are the wrong stats.\r\n//They are wrong on warcraft logs.\r\n//I am following the data that the API sent. I can change later.\r\n\r\nconst casterApprovedEnchants = [\r\n    3002, //HEAD      +22 Spell Power and +14 Critical Strike\r\n    2995, //SHOULDERS +15 Critical Strike and +12 Spell Pen\r\n    2661, //CHEST     +6  All Stats\r\n    2748, //LEGS      +35 Spell Power and +20 Stamina\r\n    2940, //BOOTS     Minor Speed and +9 Stamina\r\n    2650, //BRACERS   +15 Spell Power\r\n    2937, //GLOVES    +20 Spell Power\r\n    2621, //CLOAK     +2% Threat Reduction\r\n    2669, //WEAPON    +40 Spell Power\r\n    2654  //SHIELD    +12 Intellect\r\n]\r\n\r\nconst meleeApprovedEnchants = [\r\n    3003, //HEAD      +17 Attack Power and +16 Critical Strike\r\n    2986, //SHOULDERS +15 Attack Power and +10 Critical Strike\r\n    2661, //CHEST     +6  All Stats\r\n    3012, //LEGS      +25 Attack Power and +12 Critical Strike\r\n    2939, //BOOTS     Minor Speed and +6 Agility\r\n    2647, //BRACERS   +12 Strength\r\n    684,  //GLOVES    +15 Strength\r\n    368,  //CLOAK     +12 Agility\r\n    2621, //CLOAK     +2% Threat Reduction\r\n    2673, //WEAPON    Mongoose\r\n]\r\n\r\nconst healerApprovedEnchants = [\r\n    3001, //HEAD      +35 Healing and +7 mp5 --so messed up on wcl\r\n    2980, //SHOULDERS +33 Healing and +4 mp5 --so messed up on wcl\r\n    2953, //CHEST     +15 Resilience\r\n    2791, //CHEST     +15 Spirit\r\n    2661, //CHEST     +6  All Stats\r\n    2746, //LEGS      +66 Healing and +20 Stamina\r\n    2940, //BOOTS     Minor Speed and +9 Stamina\r\n    2617, //BRACERS   +30 Healing\r\n    2322, //GLOVES    +35 Healing\r\n    2938, //CLOAK     +20 Spell Pen\r\n    2621, //CLOAK     +2% Threat Reduction\r\n    2343, //WEAPON    +81 Healing\r\n]\r\n\r\nconst tankApprovedEnchants = [\r\n    3003, //HEAD      +17 Attack Power and +16 Critical Strike\r\n    2999, //HEAD      +16 Parry and +17 Dodge\r\n    2978, //SHOULDERS +15 Dodge and +15 Stamina\r\n    2661, //CHEST     +6  All Stats\r\n    3013, //LEGS      +40 Stamina and +12 Agility\r\n    2748, //LEGS      +35 Spell Power and +20 Stamina\r\n    2940, //BOOTS     Minor Speed and +9 Stamina\r\n    2649, //BOOTS     +12 Stamina\r\n    2647, //BRACERS   +12 Strength\r\n    2650, //BRACERS   +15 Spell Power\r\n    2613, //GLOVES    +2% Threat\r\n    368,  //CLOAK     +12 Agility\r\n    2622, //CLOAK     +12 Dodge\r\n    2673, //WEAPON    Mongoose\r\n    2669, //WEAPON    +40 Spell Power\r\n    1071, //SHIELD    +18 Stamina\r\n    2655, //SHIELD    +15 Parry\r\n]\r\n\r\nexport const validateEnchantments = (gear, spec) =>{\r\n    var failGear = []\r\n    var checklist = []\r\n\r\n    switch(spec){\r\n        case \"Destruction\": case \"Affliction\": case \"Elemental\": case \"Balance\": case \"Shadow\": case \"Arcane\": case \"Fire\": case \"Frost\":{\r\n            checklist = casterApprovedEnchants\r\n            break;\r\n        }\r\n        case \"Fury\": case \"Arms\": case \"Combat\": case \"BeastMastery\": case \"Survival\": case \"Enhancement\":{\r\n            checklist = meleeApprovedEnchants\r\n            break;\r\n        }\r\n        case \"Holy\": case \"Discipline\": case \"Restoration\":{\r\n            checklist = healerApprovedEnchants\r\n            break;\r\n        }\r\n        case \"Gladiator\": case \"Protection\": case \"Feral\": {\r\n            checklist = tankApprovedEnchants\r\n            break;\r\n        }\r\n        default:{\r\n\r\n        }\r\n    }\r\n\r\n    gear.forEach((item) => {\r\n        if(item.permanentEnchant && (item.slot !== 10 && item.slot !== 11) && !checklist.includes(item.permanentEnchant)){failGear.push(item)}\r\n    })\r\n\r\n    return failGear\r\n}\r\n\r\nexport const validateGems = (gear) => {\r\n\r\n    var failGear = []\r\n\r\n    gear.forEach((item) => {\r\n        var failGems = []\r\n        if(item.gems){\r\n            item.gems.forEach((gem)=>{\r\n                if(gem.itemLevel < 70 && (gem.id !== 30598 && gem.id !== 28118)){\r\n                    failGems.push(gem)\r\n                }\r\n            })\r\n        }\r\n        item.failGems = failGems\r\n        if(item.failGems.length > 0){\r\n            failGear.push(item)\r\n        }\r\n    })\r\n\r\n    return failGear\r\n}","export const getClassColor = (classname) =>{\r\n    var color = \"#DDD\"\r\n\r\n    switch(classname){\r\n        case \"Druid\":{\r\n            color = '#FF7C0A'\r\n            break\r\n        }\r\n        case \"Mage\":{\r\n            color = '#3FC7EB'\r\n            break\r\n        }\r\n        case \"Hunter\":{\r\n            color = '#AAD372'\r\n            break\r\n        }\r\n        case \"Paladin\":{\r\n            color = '#F48CBA'\r\n            break\r\n        }\r\n        case \"Priest\":{\r\n            color = '#FFFFFF'\r\n            break\r\n        }\r\n        case \"Shaman\":{\r\n            color = '#0070DD'\r\n            break\r\n        }\r\n        case \"Warlock\":{\r\n            color = '#8788EE'\r\n            break\r\n        }\r\n        case \"Warrior\":{\r\n            color = '#C69B6D'\r\n            break\r\n        }\r\n        case \"Rogue\":{\r\n            color = '#FFF468'\r\n            break\r\n        }\r\n        default:{\r\n            break\r\n        }\r\n    }\r\n\r\n    return color\r\n}","import React from 'react'\r\nimport { AccordionDetails, Chip, Accordion, AccordionSummary } from '@mui/material'\r\nimport { ExpandMore } from '@mui/icons-material'\r\nimport { styled } from '@mui/material/styles'\r\n\r\nconst CustomAccordionSummary = styled(AccordionSummary)`\r\n\r\n    & .MuiButtonBase-root {\r\n        height:100px;\r\n    }\r\n\r\n    & .MuiAccordionSummary-content {\r\n        margin:0;\r\n    }\r\n`\r\n\r\nconst FailColumns = ({player, i}) => {\r\n\r\n    return (\r\n       <div style={{display:'flex'}}> \r\n            <Accordion sx={{width:300, backgroundColor:i%2 === 0 ? \"#DDDDDDDD\" : null}}>\r\n                <CustomAccordionSummary expandIcon={<ExpandMore />}>\r\n                {player.failedEnchants ? <div>Enchant Fails ({player.failedEnchants.length})</div>: <p style={{color:'red'}}>Error</p>}\r\n                </CustomAccordionSummary>\r\n                <AccordionDetails>\r\n                <div>\r\n                    {player.failedEnchants && player.failedEnchants.map((item)=>{return<div><Chip label={item.name+\" - \"+item.permanentEnchantName} size=\"small\"/></div>})}\r\n                </div>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion sx={{width:300, backgroundColor:i%2 === 0 ? \"#DDDDDDDD\" : null}}>\r\n                <CustomAccordionSummary expandIcon={<ExpandMore />}>\r\n                {player.failedGems ? <div>Gem Fails ({player.failedGems.length})</div>: <p style={{color:'red'}}>Error</p>}\r\n                </CustomAccordionSummary>\r\n                <AccordionDetails>\r\n                <div>\r\n                    {player.failedGems && player.failedGems.map((item)=>{\r\n                    return(\r\n                        <div>\r\n                        {item.failGems.map((gem)=>{\r\n                            return<div><Chip label={item.name+\" - ID:\"+gem.id}/></div>\r\n                        })}\r\n                        </div>)})}\r\n                </div>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FailColumns\r\n","import React from 'react'\r\n\r\nconst BuffColumns = ({player, buffsColumns, totalCombatTime}) => {\r\n    return (\r\n        <div style={{display:'flex'}}>\r\n            {buffsColumns.map((buff)=>{\r\n                var playerBuff = player.buffs.find(pbuff => pbuff.guid === buff.id)\r\n                return(\r\n                    <div key={`${player.name}-${buff.id}`} style={{width:125}}>\r\n                        { playerBuff ? <div>{buff.uses?<span>{playerBuff.totalUses}</span>:null}{buff.uses && buff.uptime ? <span> - </span>:null}{buff.uptime ? <span>%{Math.round(playerBuff.totalUptime/totalCombatTime * 100)}</span>:null}</div> : '-'}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BuffColumns\r\n","import React from 'react'\r\n\r\nconst CastColumns = ({player, castsColumns}) => {\r\n    return (\r\n        <div style={{display:'flex'}}>\r\n            {castsColumns.map((cast)=>{\r\n                var playerCast = player.casts.find(pcast => pcast.guid === cast.id)\r\n                return(\r\n                    <div key={`${player.name}-${cast.id}`} style={{width:125}}>\r\n                        { playerCast ? <span>{playerCast.total}</span>: ' - '}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CastColumns\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport axios from 'axios'\r\nimport { authToken } from './API'\r\nimport _ from 'lodash'\r\nimport FlexContainer from './FlexContainer'\r\nimport { validateEnchantments, validateGems } from './Validations'\r\nimport { getClassColor } from './ClassDetails'\r\nimport FailColumns from './FailColumns'\r\nimport BuffColumns from './BuffColumns'\r\nimport CastColumns from './CastColumns'\r\nimport Loading from './Loading'\r\n\r\nconst RaidDetails = () => {\r\n\r\n    //holds the id param from the URL\r\n    //used to identify the user that we are editing\r\n    const {id} = useParams()\r\n\r\n    const [players, setPlayers] = useState(null)\r\n\r\n    const [totalCombatTime, setTotalCombatTime] = useState(0)\r\n\r\n    const [title, setTitle] = useState(null)\r\n\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    var unValidatedPlayers = []\r\n\r\n    const buffsColumns = [\r\n      {id:33256, name:\"Well Fed\",          uses:true,  uptime:true},\r\n      {id:33082, name:\"Strength V\",        uses:true,  uptime:true},\r\n      {id:28520, name:\"Relentless Assult\", uses:false, uptime:true}\r\n    ]\r\n    //28521 28518 28540 28520 flask\r\n    //33261 43771 33257 33263 33254 33268 43764 33256 well fed\r\n\r\n    const castsColumns = [\r\n      {id:28507, name:\"Haste Potion\",      uses:true},\r\n      {id:35476, name:\"Drums of Battle\",   uses:true}\r\n    ]\r\n\r\n    const getRaidInfo = () =>{\r\n\r\n        setIsLoading(true)\r\n\r\n        axios.request({\r\n          url: \"api/v2/client\",\r\n          method: \"post\",\r\n          baseURL: \"https://classic.warcraftlogs.com/\",\r\n          headers: {\r\n            \"Authorization\": `Bearer ${authToken}`\r\n          },\r\n          data:{\r\n            query:`{\r\n              reportData {\r\n                report(code:\"${id}\"){\r\n                  title\r\n                  fights{\r\n                    startTime\r\n                    endTime\r\n                    encounterID\r\n                    name\r\n                  }\r\n                  table(startTime:0, endTime:15000000)\r\n                }\r\n              }\r\n            }`\r\n          }\r\n        }).then(function(res) {\r\n            if(res.data.data){\r\n              var fights = res.data.data.reportData.report.fights\r\n              var dps = res.data.data.reportData.report.table.data.playerDetails.dps\r\n              var healers = res.data.data.reportData.report.table.data.playerDetails.healers\r\n              var tanks = res.data.data.reportData.report.table.data.playerDetails.tanks\r\n              \r\n              var tempTotalCombatTime = 0\r\n\r\n              fights.forEach((fight)=>{\r\n                if(fight.encounterID > 0){\r\n                  tempTotalCombatTime = tempTotalCombatTime + (fight.endTime - fight.startTime)\r\n                }\r\n              })\r\n\r\n              setTotalCombatTime(tempTotalCombatTime)\r\n\r\n              tanks.forEach((tank)=>{\r\n\r\n                dps.forEach((player, i)=>{\r\n                  if(player.type === \"Unknown\"){\r\n                    dps.splice(i,1)\r\n                  }\r\n                  else{\r\n                    if(tank.name === player.name){\r\n                      tank.combatantInfo.gear = _.union(tank.combatantInfo.gear, player.combatantInfo.gear)\r\n                      dps.splice(i, 1)\r\n                    }\r\n                  }\r\n                })\r\n\r\n                healers.forEach((healer, i)=>{\r\n                  if(tank.name === healer.name){\r\n                    tank.combatantInfo.gear = _.union(tank.combatantInfo.gear, healer.combatantInfo.gear)\r\n                    healer.splice(i, 1)\r\n                  }\r\n                })\r\n              })\r\n\r\n              healers.forEach((healer)=>{\r\n\r\n                dps.forEach((player, i)=>{\r\n                  if(healer.name === player.name){\r\n                    healer.combatantInfo.gear = _.union(healer.combatantInfo.gear, player.combatantInfo.gear)\r\n                    dps.splice(i, 1)\r\n                  }\r\n                })\r\n              })\r\n\r\n              unValidatedPlayers = _.union(dps, healers, tanks)\r\n              unValidatedPlayers.forEach((player, index, object)=>{\r\n                if(player.combatantInfo.gear){\r\n                  player.failedEnchants = validateEnchantments(player.combatantInfo.gear, player.specs[0])\r\n                  player.failedGems = validateGems(player.combatantInfo.gear)\r\n                }\r\n                else{\r\n                  object.splice(index, 1)\r\n                }\r\n              })\r\n              setPlayers(_.cloneDeep(unValidatedPlayers))\r\n              setTitle(res.data.data.reportData.report.title)\r\n            }\r\n        }).then(()=>{\r\n\r\n          var queryString = ''\r\n          unValidatedPlayers.forEach(player=>{\r\n            queryString = queryString + `${player.name}Buffs : table(sourceID:${player.id}, dataType:Buffs, startTime:0, endTime:15000000)\\n`\r\n            queryString = queryString + `${player.name}Casts : table(sourceID:${player.id}, dataType:Casts, startTime:0, endTime:15000000)\\n`\r\n          })\r\n\r\n          axios.request({\r\n            url: \"api/v2/client\",\r\n            method: \"post\",\r\n            baseURL: \"https://classic.warcraftlogs.com/\",\r\n            headers: {\r\n              \"Authorization\": `Bearer ${authToken}`\r\n            },\r\n            data:{\r\n              query:`{\r\n                reportData {\r\n                  report(code:\"${id}\"){\r\n                    ${queryString}\r\n                  }\r\n                }\r\n              }`\r\n            }\r\n          }).then((res)=>{\r\n            unValidatedPlayers.forEach((player)=>{\r\n              player.buffs = res.data.data.reportData.report[`${player.name}Buffs`].data.auras\r\n              player.casts = res.data.data.reportData.report[`${player.name}Casts`].data.entries\r\n            })\r\n            setPlayers(_.cloneDeep(unValidatedPlayers))\r\n          }).then(()=>{\r\n            setIsLoading(false)\r\n          })\r\n        })\r\n      }\r\n\r\n    useEffect(() => {\r\n      if(!players){\r\n        getRaidInfo()\r\n      }\r\n    }, [])\r\n\r\n    return ( isLoading ? <Loading/> :\r\n        <FlexContainer>\r\n            <h1>{title}</h1>\r\n            <div>\r\n              <div style={{display:'flex', position:'sticky'}}>\r\n                <div style={{width:125, fontWeight:500}}>Player Name</div>\r\n                {castsColumns.map((cast)=>{\r\n                  return(\r\n                    <div style={{width:125, fontWeight:500}}>\r\n                      <div>{cast.name}</div>\r\n                      <div>{cast.uses?<span>Uses</span>:null}{cast.uses && cast.uptime ? <span> - </span>:null}{cast.uptime ? <span>Up Time</span>:null}</div>\r\n                    </div>\r\n                  )\r\n                })}\r\n                {buffsColumns.map((buff)=>{\r\n                  return(\r\n                    <div style={{width:125, fontWeight:500}}>\r\n                      <div>{buff.name}</div>\r\n                      <div>{buff.uses?<span>Uses</span>:null}{buff.uses && buff.uptime ? <span> - </span>:null}{buff.uptime ? <span>Up Time</span>:null}</div>\r\n                    </div>\r\n                  )\r\n                })}\r\n                <div style={{width:300, fontWeight:500}}>Enchant Fails</div>\r\n                <div style={{width:300, fontWeight:500}}>Gem Fails</div>\r\n              </div>\r\n                {players.map((player, i)=>{\r\n                  return (<div key={player.name} style={{display:'flex', backgroundColor: i%2 === 0 ? \"#DDDDDDDD\" : null}}>\r\n                            <div style={{width:125, backgroundColor:getClassColor(player.type), fontWeight:500, fontSize:18}}>{player.name}</div>\r\n                            <CastColumns player={player} castsColumns={castsColumns}/>\r\n                            <BuffColumns player={player} buffsColumns={buffsColumns} totalCombatTime={totalCombatTime}/>\r\n                            <FailColumns player={player} i={i}/>\r\n                          </div>)\r\n                })}\r\n            </div>\r\n        </FlexContainer>\r\n    )\r\n}\r\n\r\nexport default RaidDetails\r\n","import React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport RaidRow from './RaidRow'\r\nimport { useRaid } from './RaidContext'\r\nimport FlexContainer from './FlexContainer'\r\n\r\n\r\nconst RaidHome = () => {\r\n\r\n    const { id } = useParams()\r\n    const { raids, getFusion } = useRaid()\r\n\r\n    useEffect(() => {\r\n        if(!raids){\r\n            getFusion()\r\n          }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Raid {id}</h1>\r\n            <FlexContainer>\r\n                {raids && raids.filter(raid => raid.title.includes(id)).map((raid)=>{\r\n                    return <RaidRow key={raid.code} raid={raid}/>\r\n                    })}\r\n            </FlexContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RaidHome\r\n","import React, { useState } from 'react'\r\nimport { Menu, Box, AppBar, Toolbar, Divider, MenuItem, Typography } from '@mui/material';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst AppNav = () => {\r\n\r\n    const history = useHistory()\r\n\r\n    const [anchor, setAnchor] = useState(null)\r\n\r\n    const open = Boolean(anchor);\r\n\r\n    const handleClick = (event) => {\r\n      setAnchor(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = (route) => {\r\n      setAnchor(null);\r\n      if(route){\r\n        history.push('/raid/'+route)\r\n      }\r\n    };  \r\n\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar position=\"static\">\r\n              <Toolbar variant=\"dense\">\r\n                <Typography sx={{cursor:'pointer'}} onClick={()=>{history.push('/')}} variant=\"h6\" color=\"inherit\" component=\"div\">\r\n                  Home\r\n                </Typography>\r\n                <div style={{width:16}}></div>\r\n                <div>\r\n                  <Typography sx={{cursor:'pointer'}} onClick={handleClick} variant=\"h6\" color=\"inherit\" component=\"div\">\r\n                    Raids\r\n                  </Typography>\r\n                  <Menu\r\n                    elevation={0}\r\n                    anchorOrigin={{\r\n                      vertical: 'bottom',\r\n                      horizontal: 'right',\r\n                    }}\r\n                    transformOrigin={{\r\n                      vertical: 'top',\r\n                      horizontal: 'right',\r\n                    }}\r\n                    anchorEl={anchor}\r\n                    open={open}\r\n                    onClose={()=>{handleClose(null)}}\r\n                  >\r\n                    <div style={{height:8}}></div>\r\n                    <span style={{fontWeight:500, fontSize:18}}>25 Man Raids</span>\r\n                    <Divider sx={{ my: 0.5 }} />\r\n                    <MenuItem onClick={()=>{handleClose('X')}}>\r\n                      Raid X\r\n                    </MenuItem>\r\n                    <MenuItem onClick={()=>{handleClose('Y')}}>\r\n                      Raid Y\r\n                    </MenuItem>\r\n                    <MenuItem onClick={()=>{handleClose('Z')}}>\r\n                      Raid Z\r\n                    </MenuItem>\r\n                    <MenuItem onClick={()=>{handleClose('M')}}>\r\n                      Raid M\r\n                    </MenuItem>\r\n                    <MenuItem onClick={()=>{handleClose('V')}}>\r\n                      Raid V\r\n                    </MenuItem>\r\n                    <MenuItem onClick={()=>{handleClose('S')}}>\r\n                      Raid S\r\n                    </MenuItem>\r\n                    <MenuItem onClick={()=>{handleClose('Alt')}}>\r\n                      Alt Raid\r\n                    </MenuItem>\r\n                    <div style={{height:8, width:200}}></div>\r\n                    <span style={{fontWeight:500, fontSize:18}}>10 Man Raids</span>\r\n                    <Divider sx={{ my: 0.5 }} />\r\n                    <MenuItem onClick={()=>{handleClose('Kara')}}>\r\n                      Kara\r\n                    </MenuItem>\r\n                  </Menu>\r\n                </div>\r\n              </Toolbar>\r\n            </AppBar>\r\n          </Box>\r\n    )\r\n}\r\n\r\nexport default AppNav\r\n","import { Route, Switch } from 'react-router';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport './App.css';\r\nimport Home from './Home';\r\nimport RaidDetails from './RaidDetails';\r\nimport RaidHome from './RaidHome';\r\nimport { getToken } from './API';\r\nimport AppNav from './AppNav';\r\nimport RaidProvider from './RaidContext';\r\n\r\nfunction App() {\r\n\r\n  //getToken()\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <RaidProvider>\r\n          <AppNav/>\r\n          <Switch>\r\n            <Route exact path='/' ><Home/></Route>\r\n            <Route exact path='/raid/:id'><RaidHome/></Route>\r\n            <Route exact path='/raiddetails/:id'><RaidDetails/></Route>\r\n          </Switch>\r\n        </RaidProvider>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}